// Code generated by go-swagger; DO NOT EDIT.

package hello

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/julianpitt/go-swagger-test/sdk/go/models"
)

// SayHelloReader is a Reader for the SayHello structure.
type SayHelloReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SayHelloReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSayHelloOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewSayHelloInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSayHelloOK creates a SayHelloOK with default headers values
func NewSayHelloOK() *SayHelloOK {
	return &SayHelloOK{}
}

/*SayHelloOK handles this case with default header values.

value from hello function
*/
type SayHelloOK struct {
	Payload *models.Message
}

func (o *SayHelloOK) Error() string {
	return fmt.Sprintf("[GET /hello][%d] sayHelloOK  %+v", 200, o.Payload)
}

func (o *SayHelloOK) GetPayload() *models.Message {
	return o.Payload
}

func (o *SayHelloOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSayHelloInternalServerError creates a SayHelloInternalServerError with default headers values
func NewSayHelloInternalServerError() *SayHelloInternalServerError {
	return &SayHelloInternalServerError{}
}

/*SayHelloInternalServerError handles this case with default header values.

Internal Server Error
*/
type SayHelloInternalServerError struct {
	Payload *models.Error
}

func (o *SayHelloInternalServerError) Error() string {
	return fmt.Sprintf("[GET /hello][%d] sayHelloInternalServerError  %+v", 500, o.Payload)
}

func (o *SayHelloInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *SayHelloInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
